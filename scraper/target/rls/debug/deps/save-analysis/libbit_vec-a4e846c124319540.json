{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1","program":"/home/austen/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","bit_vec","/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"std\"","-C","metadata=a4e846c124319540","-C","extra-filename=-a4e846c124319540","--out-dir","/home/austen/Documents/school/research/scraper/target/rls/debug/deps","-L","dependency=/home/austen/Documents/school/research/scraper/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/austen/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/austen/Documents/school/research/scraper/target/rls/debug/deps/libbit_vec-a4e846c124319540.rmeta"},"prelude":{"crate_id":{"name":"bit_vec","disambiguator":[6129525228811987584,6958307876394970822]},"crate_root":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src","external_crates":[{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[5366521311420338507,5001693844293236078]}},{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[16078967021793905033,18044181950654841110]}},{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[3256375668792353550,7694578384779899277]}},{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","num":4,"id":{"name":"std","disambiguator":[14029911340352309513,3694302842271320647]}},{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[17967524032803306908,5163911630854790873]}},{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[7486411228932131176,10611882423765912104]}},{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[8951493940525711481,6598059053846807751]}},{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[6080538021290120973,12135415365643254465]}},{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[2404946192574906823,11198495443784404083]}},{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[8156052144428984436,15205012491124168822]}},{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[11527475684179663565,15577722846879460413]}},{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[4615572763888095747,7180296191060376175]}},{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[16051702409717455556,18428390842256153874]}},{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[14083788917415871355,15092499333930635081]}}],"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":1592,"byte_end":65885,"line_start":31,"line_end":2138,"column_start":1,"column_end":50}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":1592,"byte_end":65885,"line_start":31,"line_end":2138,"column_start":1,"column_end":50},"name":"","qualname":"::","value":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":36},{"krate":0,"index":192},{"krate":0,"index":198},{"krate":0,"index":204},{"krate":0,"index":210},{"krate":0,"index":216},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":44},{"krate":0,"index":48},{"krate":0,"index":50},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":60},{"krate":0,"index":104},{"krate":0,"index":107},{"krate":0,"index":111},{"krate":0,"index":115},{"krate":0,"index":119},{"krate":0,"index":122},{"krate":0,"index":125},{"krate":0,"index":128},{"krate":0,"index":132},{"krate":0,"index":136},{"krate":0,"index":222},{"krate":0,"index":227},{"krate":0,"index":138},{"krate":0,"index":145},{"krate":0,"index":150},{"krate":0,"index":153},{"krate":0,"index":159},{"krate":0,"index":163},{"krate":0,"index":168},{"krate":0,"index":172},{"krate":0,"index":174},{"krate":0,"index":231},{"krate":0,"index":235},{"krate":0,"index":179},{"krate":0,"index":185},{"krate":0,"index":189}],"decl_id":null,"docs":" Collections implemented with bit vectors.","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":3186,"byte_end":3196,"line_start":86,"line_end":86,"column_start":1,"column_end":11}}]},{"kind":"Trait","id":{"krate":0,"index":29},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":4070,"byte_end":4078,"line_start":121,"line_end":121,"column_start":11,"column_end":19},"name":"BitBlock","qualname":"::BitBlock","value":"BitBlock: Copy + Add<Self, Output = Self> + Sub<Self, Output = Self> + Shl<usize, Output\n= Self> + Shr<usize, Output = Self> + Not<Output = Self> + BitAnd<Self, Output\n= Self> + BitOr<Self, Output = Self> + BitXor<Self, Output = Self> + Rem<Self,\nOutput = Self> + Eq + Ord + hash::Hash","parent":null,"children":[{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35}],"decl_id":null,"docs":" Abstracts over a pile of bits (basically unsigned primitives)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":4388,"byte_end":4392,"line_start":137,"line_end":137,"column_start":8,"column_end":12},"name":"bits","qualname":"::BitBlock::bits","value":"fn () -> usize","parent":{"krate":0,"index":29},"children":[],"decl_id":null,"docs":" How many bits it has\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":4456,"byte_end":4461,"line_start":140,"line_end":140,"column_start":8,"column_end":13},"name":"bytes","qualname":"::BitBlock::bytes","value":"fn () -> usize","parent":{"krate":0,"index":29},"children":[],"decl_id":null,"docs":" How many bytes it has\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":4439,"byte_end":4448,"line_start":139,"line_end":139,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":4563,"byte_end":4572,"line_start":142,"line_end":142,"column_start":8,"column_end":17},"name":"from_byte","qualname":"::BitBlock::from_byte","value":"fn (byte: u8) -> Self","parent":{"krate":0,"index":29},"children":[],"decl_id":null,"docs":" Convert a byte into this type (lowest-order bits set)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":4651,"byte_end":4661,"line_start":144,"line_end":144,"column_start":8,"column_end":18},"name":"count_ones","qualname":"::BitBlock::count_ones","value":"fn (self) -> usize","parent":{"krate":0,"index":29},"children":[],"decl_id":null,"docs":" Count the number of 1's in the bitwise repr\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":4701,"byte_end":4705,"line_start":146,"line_end":146,"column_start":8,"column_end":12},"name":"zero","qualname":"::BitBlock::zero","value":"fn () -> Self","parent":{"krate":0,"index":29},"children":[],"decl_id":null,"docs":" Get `0`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":4740,"byte_end":4743,"line_start":148,"line_end":148,"column_start":8,"column_end":11},"name":"one","qualname":"::BitBlock::one","value":"fn () -> Self","parent":{"krate":0,"index":29},"children":[],"decl_id":null,"docs":" Get `1`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":40},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":6320,"byte_end":6326,"line_start":215,"line_end":215,"column_start":12,"column_end":18},"name":"BitVec","qualname":"::BitVec","value":"BitVec {  }","parent":null,"children":[{"krate":0,"index":42},{"krate":0,"index":43}],"decl_id":null,"docs":" The bitvector type.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":8118,"byte_end":8121,"line_start":272,"line_end":272,"column_start":12,"column_end":15},"name":"new","qualname":"<BitVec<u32>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `BitVec`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":8097,"byte_end":8106,"line_start":271,"line_end":271,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":8542,"byte_end":8551,"line_start":291,"line_end":291,"column_start":12,"column_end":21},"name":"from_elem","qualname":"<BitVec<u32>>::from_elem","value":"fn (nbits: usize, bit: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a `BitVec` that holds `nbits` elements, setting each element\n to `bit`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":8521,"byte_end":8530,"line_start":290,"line_end":290,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":9230,"byte_end":9243,"line_start":309,"line_end":309,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BitVec<u32>>::with_capacity","value":"fn (nbits: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty `BitVec` with the specified capacity.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":9209,"byte_end":9218,"line_start":308,"line_end":308,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":10006,"byte_end":10016,"line_start":331,"line_end":331,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<BitVec<u32>>::from_bytes","value":"fn (bytes: &[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Transforms a byte-vector into a `BitVec`. Each byte becomes eight bits,\n with the most significant bits of each byte coming first. Each\n bit becomes `true` if equal to 1 or `false` if equal to 0.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":11321,"byte_end":11328,"line_start":372,"line_end":372,"column_start":12,"column_end":19},"name":"from_fn","qualname":"<BitVec<u32>>::from_fn","value":"fn <F> (len: usize, mut f: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a `BitVec` of the specified length where the value at each index\n is `f(index)`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":11300,"byte_end":11309,"line_start":371,"line_end":371,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":12560,"byte_end":12566,"line_start":411,"line_end":411,"column_start":12,"column_end":18},"name":"blocks","qualname":"<BitVec<B>>::blocks","value":"fn (&self) -> Blocks<B>","parent":null,"children":[],"decl_id":null,"docs":" Iterator over the underlying blocks of data\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":12539,"byte_end":12548,"line_start":410,"line_end":410,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":12780,"byte_end":12787,"line_start":420,"line_end":420,"column_start":12,"column_end":19},"name":"storage","qualname":"<BitVec<B>>::storage","value":"fn (&self) -> &[B]","parent":null,"children":[],"decl_id":null,"docs":" Exposes the raw block storage of this BitVec","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":12759,"byte_end":12768,"line_start":419,"line_end":419,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":12994,"byte_end":13005,"line_start":428,"line_end":428,"column_start":19,"column_end":30},"name":"storage_mut","qualname":"<BitVec<B>>::storage_mut","value":"fn (&mut self) -> &mut Vec<B>","parent":null,"children":[],"decl_id":null,"docs":" Exposes the raw block storage of this BitVec","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":12966,"byte_end":12975,"line_start":427,"line_end":427,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":14021,"byte_end":14024,"line_start":461,"line_end":461,"column_start":12,"column_end":15},"name":"get","qualname":"<BitVec<B>>::get","value":"fn (&self, i: usize) -> Option<bool>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the value at index `i`, or `None` if the index is out of bounds.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":14000,"byte_end":14009,"line_start":460,"line_end":460,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":14646,"byte_end":14649,"line_start":488,"line_end":488,"column_start":12,"column_end":15},"name":"set","qualname":"<BitVec<B>>::set","value":"fn (&mut self, i: usize, x: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of a bit at an index `i`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":14625,"byte_end":14634,"line_start":487,"line_end":487,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":15354,"byte_end":15361,"line_start":513,"line_end":513,"column_start":12,"column_end":19},"name":"set_all","qualname":"<BitVec<B>>::set_all","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets all bits to 1.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":15333,"byte_end":15342,"line_start":512,"line_end":512,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":15815,"byte_end":15821,"line_start":533,"line_end":533,"column_start":12,"column_end":18},"name":"negate","qualname":"<BitVec<B>>::negate","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Flips all bits.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":15794,"byte_end":15803,"line_start":532,"line_end":532,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":16655,"byte_end":16660,"line_start":564,"line_end":564,"column_start":12,"column_end":17},"name":"union","qualname":"<BitVec<B>>::union","value":"fn (&mut self, other: &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Calculates the union of two bitvectors. This acts like the bitwise `or`\n function.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":16634,"byte_end":16643,"line_start":563,"line_end":563,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":17503,"byte_end":17512,"line_start":594,"line_end":594,"column_start":12,"column_end":21},"name":"intersect","qualname":"<BitVec<B>>::intersect","value":"fn (&mut self, other: &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Calculates the intersection of two bitvectors. This acts like the\n bitwise `and` function.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":17482,"byte_end":17491,"line_start":593,"line_end":593,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":18623,"byte_end":18633,"line_start":631,"line_end":631,"column_start":12,"column_end":22},"name":"difference","qualname":"<BitVec<B>>::difference","value":"fn (&mut self, other: &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Calculates the difference between two bitvectors.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":18602,"byte_end":18611,"line_start":630,"line_end":630,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":19044,"byte_end":19047,"line_start":649,"line_end":649,"column_start":12,"column_end":15},"name":"all","qualname":"<BitVec<B>>::all","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if all bits are 1.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":19023,"byte_end":19032,"line_start":648,"line_end":648,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":19724,"byte_end":19728,"line_start":671,"line_end":671,"column_start":12,"column_end":16},"name":"iter","qualname":"<BitVec<B>>::iter","value":"fn (&self) -> Iter<B>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the elements of the vector in order.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":19703,"byte_end":19712,"line_start":670,"line_end":670,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":23088,"byte_end":23092,"line_start":794,"line_end":794,"column_start":12,"column_end":16},"name":"none","qualname":"<BitVec<B>>::none","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if all bits are 0.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":23067,"byte_end":23076,"line_start":793,"line_end":793,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":23481,"byte_end":23484,"line_start":812,"line_end":812,"column_start":12,"column_end":15},"name":"any","qualname":"<BitVec<B>>::any","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if any bit is 1.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":23460,"byte_end":23469,"line_start":811,"line_end":811,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":24201,"byte_end":24209,"line_start":837,"line_end":837,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<BitVec<B>>::to_bytes","value":"fn (&self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Organises the bits into bytes, such that the first bit in the\n `BitVec` becomes the high-order bit of the first byte. If the\n size of the `BitVec` is not a multiple of eight then trailing bits\n will be filled-in with `false`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":25459,"byte_end":25465,"line_start":880,"line_end":880,"column_start":12,"column_end":18},"name":"eq_vec","qualname":"<BitVec<B>>::eq_vec","value":"fn (&self, v: &[bool]) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Compares a `BitVec` to a slice of `bool`s.\n Both the `BitVec` and slice must have the same length.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":25438,"byte_end":25447,"line_start":879,"line_end":879,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":26009,"byte_end":26017,"line_start":900,"line_end":900,"column_start":12,"column_end":20},"name":"truncate","qualname":"<BitVec<B>>::truncate","value":"fn (&mut self, len: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shortens a `BitVec`, dropping excess elements.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":25988,"byte_end":25997,"line_start":899,"line_end":899,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":26780,"byte_end":26787,"line_start":927,"line_end":927,"column_start":12,"column_end":19},"name":"reserve","qualname":"<BitVec<B>>::reserve","value":"fn (&mut self, additional: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` more bits to be inserted in the given\n `BitVec`. The collection may reserve more space to avoid frequent reallocations.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":26759,"byte_end":26768,"line_start":926,"line_end":926,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":27851,"byte_end":27864,"line_start":957,"line_end":957,"column_start":12,"column_end":25},"name":"reserve_exact","qualname":"<BitVec<B>>::reserve_exact","value":"fn (&mut self, additional: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reserves the minimum capacity for exactly `additional` more bits to be inserted in the\n given `BitVec`. Does nothing if the capacity is already sufficient.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":27830,"byte_end":27839,"line_start":956,"line_end":956,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":28540,"byte_end":28548,"line_start":978,"line_end":978,"column_start":12,"column_end":20},"name":"capacity","qualname":"<BitVec<B>>::capacity","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the capacity in bits for this bit vector. Inserting any\n element less than this amount will not trigger a resizing.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":28519,"byte_end":28528,"line_start":977,"line_end":977,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":29102,"byte_end":29106,"line_start":998,"line_end":998,"column_start":12,"column_end":16},"name":"grow","qualname":"<BitVec<B>>::grow","value":"fn (&mut self, n: usize, value: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Grows the `BitVec` in-place, adding `n` copies of `value` to the `BitVec`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":31051,"byte_end":31054,"line_start":1050,"line_end":1050,"column_start":12,"column_end":15},"name":"pop","qualname":"<BitVec<B>>::pop","value":"fn (&mut self) -> Option<bool>","parent":null,"children":[],"decl_id":null,"docs":" Removes the last bit from the BitVec, and returns it. Returns None if the BitVec is empty.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":31030,"byte_end":31039,"line_start":1049,"line_end":1049,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":31736,"byte_end":31740,"line_start":1080,"line_end":1080,"column_start":12,"column_end":16},"name":"push","qualname":"<BitVec<B>>::push","value":"fn (&mut self, elem: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Pushes a `bool` onto the end.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":31715,"byte_end":31724,"line_start":1079,"line_end":1079,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":32096,"byte_end":32099,"line_start":1091,"line_end":1091,"column_start":12,"column_end":15},"name":"len","qualname":"<BitVec<B>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the total number of bits in this vector\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":32075,"byte_end":32084,"line_start":1090,"line_end":1090,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":32323,"byte_end":32330,"line_start":1097,"line_end":1097,"column_start":19,"column_end":26},"name":"set_len","qualname":"<BitVec<B>>::set_len","value":"fn (&mut self, len: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bits that this BitVec considers initialized.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":32295,"byte_end":32304,"line_start":1096,"line_end":1096,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":32468,"byte_end":32476,"line_start":1103,"line_end":1103,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<BitVec<B>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if there are no bits in this vector\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":32447,"byte_end":32456,"line_start":1102,"line_end":1102,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":32578,"byte_end":32583,"line_start":1107,"line_end":1107,"column_start":12,"column_end":17},"name":"clear","qualname":"<BitVec<B>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clears all bits in this vector.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":32557,"byte_end":32566,"line_start":1106,"line_end":1106,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":32947,"byte_end":32960,"line_start":1117,"line_end":1117,"column_start":12,"column_end":25},"name":"shrink_to_fit","qualname":"<BitVec<B>>::shrink_to_fit","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shrinks the capacity of the underlying storage as much as\n possible.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":222},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":35600,"byte_end":35604,"line_start":1221,"line_end":1221,"column_start":12,"column_end":16},"name":"Iter","qualname":"::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":225},{"krate":0,"index":226}],"decl_id":null,"docs":" An iterator for `BitVec`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":159},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":36620,"byte_end":36628,"line_start":1262,"line_end":1262,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":161},{"krate":0,"index":162}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":231},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":37461,"byte_end":37467,"line_start":1298,"line_end":1298,"column_start":12,"column_end":18},"name":"Blocks","qualname":"::Blocks","value":"Blocks {  }","parent":null,"children":[{"krate":0,"index":234}],"decl_id":null,"docs":" An iterator over the blocks of a `BitVec`.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":6599,"byte_end":6605,"line_start":223,"line_end":223,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":46},{"krate":0,"index":47}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":7919,"byte_end":7925,"line_start":261,"line_end":261,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":11576,"byte_end":11582,"line_start":383,"line_end":383,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":62},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":76},{"krate":0,"index":78},{"krate":0,"index":80},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":90},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":33051,"byte_end":33057,"line_start":1122,"line_end":1122,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":33191,"byte_end":33197,"line_start":1127,"line_end":1127,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":33411,"byte_end":33417,"line_start":1136,"line_end":1136,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":33734,"byte_end":33740,"line_start":1148,"line_end":1148,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":117},{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":34052,"byte_end":34058,"line_start":1161,"line_end":1161,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":121}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":34205,"byte_end":34211,"line_start":1168,"line_end":1168,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":34819,"byte_end":34825,"line_start":1188,"line_end":1188,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":35047,"byte_end":35053,"line_start":1197,"line_end":1197,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":35280,"byte_end":35286,"line_start":1207,"line_end":1207,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":35528,"byte_end":35534,"line_start":1217,"line_end":1217,"column_start":31,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":35715,"byte_end":35719,"line_start":1226,"line_end":1226,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":36201,"byte_end":36205,"line_start":1241,"line_end":1241,"column_start":47,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":36397,"byte_end":36401,"line_start":1248,"line_end":1248,"column_start":45,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":36721,"byte_end":36729,"line_start":1267,"line_end":1267,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":165},{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":36928,"byte_end":36936,"line_start":1276,"line_end":1276,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":37120,"byte_end":37128,"line_start":1283,"line_end":1283,"column_start":41,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":37171,"byte_end":37177,"line_start":1285,"line_end":1285,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":37549,"byte_end":37555,"line_start":1302,"line_end":1302,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":37829,"byte_end":37835,"line_start":1316,"line_end":1316,"column_start":47,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":37994,"byte_end":38000,"line_start":1323,"line_end":1323,"column_start":45,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":4081,"byte_end":4085,"line_start":122,"line_end":122,"column_start":2,"column_end":6},"kind":"SuperTrait","from":{"krate":1,"index":1548},"to":{"krate":0,"index":29}},{"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":4089,"byte_end":4092,"line_start":123,"line_end":123,"column_start":2,"column_end":5},"kind":"SuperTrait","from":{"krate":1,"index":1601},"to":{"krate":0,"index":29}},{"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":4115,"byte_end":4118,"line_start":124,"line_end":124,"column_start":2,"column_end":5},"kind":"SuperTrait","from":{"krate":1,"index":1606},"to":{"krate":0,"index":29}},{"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":4141,"byte_end":4144,"line_start":125,"line_end":125,"column_start":2,"column_end":5},"kind":"SuperTrait","from":{"krate":1,"index":1674},"to":{"krate":0,"index":29}},{"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":4168,"byte_end":4171,"line_start":126,"line_end":126,"column_start":2,"column_end":5},"kind":"SuperTrait","from":{"krate":1,"index":1680},"to":{"krate":0,"index":29}},{"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":4195,"byte_end":4198,"line_start":127,"line_end":127,"column_start":2,"column_end":5},"kind":"SuperTrait","from":{"krate":1,"index":1655},"to":{"krate":0,"index":29}},{"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":4215,"byte_end":4221,"line_start":128,"line_end":128,"column_start":2,"column_end":8},"kind":"SuperTrait","from":{"krate":1,"index":1659},"to":{"krate":0,"index":29}},{"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":4244,"byte_end":4249,"line_start":129,"line_end":129,"column_start":2,"column_end":7},"kind":"SuperTrait","from":{"krate":1,"index":1664},"to":{"krate":0,"index":29}},{"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":4272,"byte_end":4278,"line_start":130,"line_end":130,"column_start":2,"column_end":8},"kind":"SuperTrait","from":{"krate":1,"index":1669},"to":{"krate":0,"index":29}},{"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":4301,"byte_end":4304,"line_start":131,"line_end":131,"column_start":2,"column_end":5},"kind":"SuperTrait","from":{"krate":1,"index":1622},"to":{"krate":0,"index":29}},{"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":4327,"byte_end":4329,"line_start":132,"line_end":132,"column_start":2,"column_end":4},"kind":"SuperTrait","from":{"krate":1,"index":2050},"to":{"krate":0,"index":29}},{"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":4333,"byte_end":4336,"line_start":133,"line_end":133,"column_start":2,"column_end":5},"kind":"SuperTrait","from":{"krate":1,"index":2071},"to":{"krate":0,"index":29}},{"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":4346,"byte_end":4350,"line_start":134,"line_end":134,"column_start":8,"column_end":12},"kind":"SuperTrait","from":{"krate":1,"index":7215},"to":{"krate":0,"index":29}},{"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":6599,"byte_end":6605,"line_start":223,"line_end":223,"column_start":36,"column_end":42},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":40},"to":{"krate":1,"index":1785}},{"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":7919,"byte_end":7925,"line_start":261,"line_end":261,"column_start":6,"column_end":12},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":40},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":11576,"byte_end":11582,"line_start":383,"line_end":383,"column_start":19,"column_end":25},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":40},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":33051,"byte_end":33057,"line_start":1122,"line_end":1122,"column_start":31,"column_end":37},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":40},"to":{"krate":1,"index":2210}},{"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":33191,"byte_end":33197,"line_start":1127,"line_end":1127,"column_start":42,"column_end":48},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":40},"to":{"krate":1,"index":3896}},{"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":33411,"byte_end":33417,"line_start":1136,"line_end":1136,"column_start":36,"column_end":42},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":40},"to":{"krate":1,"index":3909}},{"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":33734,"byte_end":33740,"line_start":1148,"line_end":1148,"column_start":29,"column_end":35},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":40},"to":{"krate":1,"index":2185}},{"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":34052,"byte_end":34058,"line_start":1161,"line_end":1161,"column_start":34,"column_end":40},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":40},"to":{"krate":1,"index":2082}},{"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":34205,"byte_end":34211,"line_start":1168,"line_end":1168,"column_start":27,"column_end":33},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":40},"to":{"krate":1,"index":2071}},{"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":34819,"byte_end":34825,"line_start":1188,"line_end":1188,"column_start":34,"column_end":40},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":40},"to":{"krate":1,"index":7573}},{"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":35047,"byte_end":35053,"line_start":1197,"line_end":1197,"column_start":34,"column_end":40},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":40},"to":{"krate":1,"index":7215}},{"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":35280,"byte_end":35286,"line_start":1207,"line_end":1207,"column_start":38,"column_end":44},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":40},"to":{"krate":1,"index":2045}},{"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":35528,"byte_end":35534,"line_start":1217,"line_end":1217,"column_start":31,"column_end":37},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":40},"to":{"krate":1,"index":2050}},{"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":35715,"byte_end":35719,"line_start":1226,"line_end":1226,"column_start":36,"column_end":40},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":222},"to":{"krate":1,"index":3602}},{"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":36201,"byte_end":36205,"line_start":1241,"line_end":1241,"column_start":47,"column_end":51},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":222},"to":{"krate":1,"index":3859}},{"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":36397,"byte_end":36401,"line_start":1248,"line_end":1248,"column_start":45,"column_end":49},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":222},"to":{"krate":1,"index":3888}},{"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":36721,"byte_end":36729,"line_start":1267,"line_end":1267,"column_start":32,"column_end":40},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":159},"to":{"krate":1,"index":3602}},{"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":36928,"byte_end":36936,"line_start":1276,"line_end":1276,"column_start":43,"column_end":51},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":159},"to":{"krate":1,"index":3859}},{"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":37120,"byte_end":37128,"line_start":1283,"line_end":1283,"column_start":41,"column_end":49},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":159},"to":{"krate":1,"index":3888}},{"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":37171,"byte_end":37177,"line_start":1285,"line_end":1285,"column_start":36,"column_end":42},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":40},"to":{"krate":1,"index":3900}},{"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":37549,"byte_end":37555,"line_start":1302,"line_end":1302,"column_start":36,"column_end":42},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":231},"to":{"krate":1,"index":3602}},{"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":37829,"byte_end":37835,"line_start":1316,"line_end":1316,"column_start":47,"column_end":53},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":231},"to":{"krate":1,"index":3859}},{"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":37994,"byte_end":38000,"line_start":1323,"line_end":1323,"column_start":45,"column_end":51},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":231},"to":{"krate":1,"index":3888}}]}
{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1","program":"/home/austen/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","bit_set","/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=aaacbf5724c52054","-C","extra-filename=-aaacbf5724c52054","--out-dir","/home/austen/Documents/school/research/scraper/target/rls/debug/deps","-L","dependency=/home/austen/Documents/school/research/scraper/target/rls/debug/deps","--extern","bit_vec=/home/austen/Documents/school/research/scraper/target/rls/debug/deps/libbit_vec-a4e846c124319540.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/austen/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/austen/Documents/school/research/scraper/target/rls/debug/deps/libbit_set-aaacbf5724c52054.rmeta"},"prelude":{"crate_id":{"name":"bit_set","disambiguator":[15072552244010163517,1813527008340128536]},"crate_root":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src","external_crates":[{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[5366521311420338507,5001693844293236078]}},{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[16078967021793905033,18044181950654841110]}},{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[3256375668792353550,7694578384779899277]}},{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","num":4,"id":{"name":"bit_vec","disambiguator":[6129525228811987584,6958307876394970822]}},{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","num":5,"id":{"name":"std","disambiguator":[14029911340352309513,3694302842271320647]}},{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","num":6,"id":{"name":"alloc","disambiguator":[17967524032803306908,5163911630854790873]}},{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","num":7,"id":{"name":"libc","disambiguator":[7486411228932131176,10611882423765912104]}},{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","num":8,"id":{"name":"unwind","disambiguator":[8951493940525711481,6598059053846807751]}},{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","num":9,"id":{"name":"cfg_if","disambiguator":[6080538021290120973,12135415365643254465]}},{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","num":10,"id":{"name":"backtrace","disambiguator":[2404946192574906823,11198495443784404083]}},{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[8156052144428984436,15205012491124168822]}},{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","num":12,"id":{"name":"backtrace_sys","disambiguator":[11527475684179663565,15577722846879460413]}},{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","num":13,"id":{"name":"hashbrown","disambiguator":[4615572763888095747,7180296191060376175]}},{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","num":14,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[16051702409717455556,18428390842256153874]}},{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[14083788917415871355,15092499333930635081]}}],"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":472,"byte_end":40805,"line_start":11,"line_end":1443,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":472,"byte_end":40805,"line_start":11,"line_end":1443,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":30},{"krate":0,"index":33},{"krate":0,"index":35},{"krate":0,"index":39},{"krate":0,"index":42},{"krate":0,"index":46},{"krate":0,"index":49},{"krate":0,"index":53},{"krate":0,"index":57},{"krate":0,"index":60},{"krate":0,"index":63},{"krate":0,"index":66},{"krate":0,"index":68},{"krate":0,"index":73},{"krate":0,"index":121},{"krate":0,"index":124},{"krate":0,"index":181},{"krate":0,"index":187},{"krate":0,"index":128},{"krate":0,"index":191},{"krate":0,"index":197},{"krate":0,"index":201},{"krate":0,"index":206},{"krate":0,"index":210},{"krate":0,"index":215},{"krate":0,"index":219},{"krate":0,"index":224},{"krate":0,"index":228},{"krate":0,"index":233},{"krate":0,"index":237},{"krate":0,"index":242},{"krate":0,"index":132},{"krate":0,"index":139},{"krate":0,"index":145},{"krate":0,"index":151},{"krate":0,"index":157},{"krate":0,"index":163},{"krate":0,"index":169},{"krate":0,"index":175}],"decl_id":null,"docs":" An implementation of a set using a bit vector as an underlying\n representation for holding unsigned numerical elements.","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":1356,"byte_end":1366,"line_start":50,"line_end":50,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":39},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":3528,"byte_end":3534,"line_start":105,"line_end":105,"column_start":12,"column_end":18},"name":"BitSet","qualname":"::BitSet","value":"BitSet {  }","parent":null,"children":[{"krate":0,"index":41}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":5054,"byte_end":5057,"line_start":177,"line_end":177,"column_start":12,"column_end":15},"name":"new","qualname":"<BitSet<u32>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty `BitSet`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":5033,"byte_end":5042,"line_start":176,"line_end":176,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":5423,"byte_end":5436,"line_start":193,"line_end":193,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BitSet<u32>>::with_capacity","value":"fn (nbits: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BitSet` with initially no contents, able to\n hold `nbits` elements without resizing.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":5402,"byte_end":5411,"line_start":192,"line_end":192,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":6109,"byte_end":6121,"line_start":220,"line_end":220,"column_start":12,"column_end":24},"name":"from_bit_vec","qualname":"<BitSet<u32>>::from_bit_vec","value":"fn (bit_vec: BitVec) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BitSet` from the given bit vector.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":6088,"byte_end":6097,"line_start":219,"line_end":219,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":6203,"byte_end":6213,"line_start":224,"line_end":224,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<BitSet<u32>>::from_bytes","value":"fn (bytes: &[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":6678,"byte_end":6686,"line_start":243,"line_end":243,"column_start":12,"column_end":20},"name":"capacity","qualname":"<BitSet<B>>::capacity","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the capacity in bits for this bit vector. Inserting any\n element less than this amount will not trigger a resizing.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":6657,"byte_end":6666,"line_start":242,"line_end":242,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":7264,"byte_end":7275,"line_start":263,"line_end":263,"column_start":12,"column_end":23},"name":"reserve_len","qualname":"<BitSet<B>>::reserve_len","value":"fn (&mut self, len: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for the given `BitSet` to contain `len` distinct elements. In the case\n of `BitSet` this means reallocations will not occur as long as all inserted elements\n are less than `len`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":8120,"byte_end":8137,"line_start":288,"line_end":288,"column_start":12,"column_end":29},"name":"reserve_len_exact","qualname":"<BitSet<B>>::reserve_len_exact","value":"fn (&mut self, len: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reserves the minimum capacity for the given `BitSet` to contain `len` distinct elements.\n In the case of `BitSet` this means reallocations will not occur as long as all inserted\n elements are less than `len`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":8657,"byte_end":8669,"line_start":311,"line_end":311,"column_start":12,"column_end":24},"name":"into_bit_vec","qualname":"<BitSet<B>>::into_bit_vec","value":"fn (self) -> BitVec<B>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this set to return the underlying bit vector.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":8636,"byte_end":8645,"line_start":310,"line_end":310,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":9025,"byte_end":9032,"line_start":329,"line_end":329,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BitSet<B>>::get_ref","value":"fn (&self) -> &BitVec<B>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying bit vector.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":9004,"byte_end":9013,"line_start":328,"line_end":328,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":10514,"byte_end":10527,"line_start":382,"line_end":382,"column_start":12,"column_end":25},"name":"shrink_to_fit","qualname":"<BitSet<B>>::shrink_to_fit","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Truncates the underlying vector to the least length required.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":10493,"byte_end":10502,"line_start":381,"line_end":381,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":11359,"byte_end":11363,"line_start":411,"line_end":411,"column_start":12,"column_end":16},"name":"iter","qualname":"<BitSet<B>>::iter","value":"fn (&self) -> Iter<B>","parent":null,"children":[],"decl_id":null,"docs":" Iterator over each usize stored in the `BitSet`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":11338,"byte_end":11347,"line_start":410,"line_end":410,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":11946,"byte_end":11951,"line_start":432,"line_end":432,"column_start":12,"column_end":17},"name":"union","qualname":"<BitSet<B>>::union","value":"fn <'a> (&'a self, other: &'a Self) -> Union<'a, B>","parent":null,"children":[],"decl_id":null,"docs":" Iterator over each usize stored in `self` union `other`.\n See [union_with](#method.union_with) for an efficient in-place version.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":11925,"byte_end":11934,"line_start":431,"line_end":431,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":12726,"byte_end":12738,"line_start":459,"line_end":459,"column_start":12,"column_end":24},"name":"intersection","qualname":"<BitSet<B>>::intersection","value":"fn <'a> (&'a self, other: &'a Self) -> Intersection<'a, B>","parent":null,"children":[],"decl_id":null,"docs":" Iterator over each usize stored in `self` intersect `other`.\n See [intersect_with](#method.intersect_with) for an efficient in-place version.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":12705,"byte_end":12714,"line_start":458,"line_end":458,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":13844,"byte_end":13854,"line_start":494,"line_end":494,"column_start":12,"column_end":22},"name":"difference","qualname":"<BitSet<B>>::difference","value":"fn <'a> (&'a self, other: &'a Self) -> Difference<'a, B>","parent":null,"children":[],"decl_id":null,"docs":" Iterator over each usize stored in the `self` setminus `other`.\n See [difference_with](#method.difference_with) for an efficient in-place version.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":13823,"byte_end":13832,"line_start":493,"line_end":493,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":14729,"byte_end":14749,"line_start":522,"line_end":522,"column_start":12,"column_end":32},"name":"symmetric_difference","qualname":"<BitSet<B>>::symmetric_difference","value":"fn <'a> (&'a self, other: &'a Self) -> SymmetricDifference<'a, B>","parent":null,"children":[],"decl_id":null,"docs":" Iterator over each usize stored in the symmetric difference of `self` and `other`.\n See [symmetric_difference_with](#method.symmetric_difference_with) for\n an efficient in-place version.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":14708,"byte_end":14717,"line_start":521,"line_end":521,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":15550,"byte_end":15560,"line_start":551,"line_end":551,"column_start":12,"column_end":22},"name":"union_with","qualname":"<BitSet<B>>::union_with","value":"fn (&mut self, other: &Self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Unions in-place with the specified other bit vector.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":15529,"byte_end":15538,"line_start":550,"line_end":550,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":16127,"byte_end":16141,"line_start":574,"line_end":574,"column_start":12,"column_end":26},"name":"intersect_with","qualname":"<BitSet<B>>::intersect_with","value":"fn (&mut self, other: &Self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Intersects in-place with the specified other bit vector.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":16106,"byte_end":16115,"line_start":573,"line_end":573,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":17028,"byte_end":17043,"line_start":606,"line_end":606,"column_start":12,"column_end":27},"name":"difference_with","qualname":"<BitSet<B>>::difference_with","value":"fn (&mut self, other: &Self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Makes this bit vector the difference with the specified other bit vector\n in-place.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":17007,"byte_end":17016,"line_start":605,"line_end":605,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":17666,"byte_end":17691,"line_start":630,"line_end":630,"column_start":12,"column_end":37},"name":"symmetric_difference_with","qualname":"<BitSet<B>>::symmetric_difference_with","value":"fn (&mut self, other: &Self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Makes this bit vector the symmetric difference with the specified other\n bit vector in-place.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":17645,"byte_end":17654,"line_start":629,"line_end":629,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":19978,"byte_end":19981,"line_start":716,"line_end":716,"column_start":12,"column_end":15},"name":"len","qualname":"<BitSet<B>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of set bits in this set.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":19957,"byte_end":19966,"line_start":715,"line_end":715,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":20169,"byte_end":20177,"line_start":722,"line_end":722,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<BitSet<B>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether there are no bits set in this set\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":20148,"byte_end":20157,"line_start":721,"line_end":721,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":20291,"byte_end":20296,"line_start":728,"line_end":728,"column_start":12,"column_end":17},"name":"clear","qualname":"<BitSet<B>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clears all bits in this set\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":20270,"byte_end":20279,"line_start":727,"line_end":727,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":20439,"byte_end":20447,"line_start":734,"line_end":734,"column_start":12,"column_end":20},"name":"contains","qualname":"<BitSet<B>>::contains","value":"fn (&self, value: usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this set contains the specified integer.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":20418,"byte_end":20427,"line_start":733,"line_end":733,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":20736,"byte_end":20747,"line_start":742,"line_end":742,"column_start":12,"column_end":23},"name":"is_disjoint","qualname":"<BitSet<B>>::is_disjoint","value":"fn (&self, other: &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set has no elements in common with `other`.\n This is equivalent to checking for an empty intersection.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":20715,"byte_end":20724,"line_start":741,"line_end":741,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":20919,"byte_end":20928,"line_start":748,"line_end":748,"column_start":12,"column_end":21},"name":"is_subset","qualname":"<BitSet<B>>::is_subset","value":"fn (&self, other: &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set is a subset of another.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":20898,"byte_end":20907,"line_start":747,"line_end":747,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":21507,"byte_end":21518,"line_start":761,"line_end":761,"column_start":12,"column_end":23},"name":"is_superset","qualname":"<BitSet<B>>::is_superset","value":"fn (&self, other: &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set is a superset of another.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":21486,"byte_end":21495,"line_start":760,"line_end":760,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":21703,"byte_end":21709,"line_start":767,"line_end":767,"column_start":12,"column_end":18},"name":"insert","qualname":"<BitSet<B>>::insert","value":"fn (&mut self, value: usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Adds a value to the set. Returns `true` if the value was not already\n present in the set.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":22184,"byte_end":22190,"line_start":784,"line_end":784,"column_start":12,"column_end":18},"name":"remove","qualname":"<BitSet<B>>::remove","value":"fn (&mut self, value: usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Removes a value from the set. Returns `true` if the value was\n present in the set.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":201},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":23277,"byte_end":23281,"line_start":833,"line_end":833,"column_start":12,"column_end":16},"name":"Iter","qualname":"::Iter","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator for `BitSet`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":210},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":23351,"byte_end":23356,"line_start":835,"line_end":835,"column_start":12,"column_end":17},"name":"Union","qualname":"::Union","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":219},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":23435,"byte_end":23447,"line_start":837,"line_end":837,"column_start":12,"column_end":24},"name":"Intersection","qualname":"::Intersection","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":228},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":23532,"byte_end":23542,"line_start":839,"line_end":839,"column_start":12,"column_end":22},"name":"Difference","qualname":"::Difference","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":237},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":23621,"byte_end":23640,"line_start":841,"line_end":841,"column_start":12,"column_end":31},"name":"SymmetricDifference","qualname":"::SymmetricDifference","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":3601,"byte_end":3607,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":44},{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":3853,"byte_end":3859,"line_start":121,"line_end":121,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":48}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":3992,"byte_end":3998,"line_start":126,"line_end":126,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":51}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":4193,"byte_end":4199,"line_start":134,"line_end":134,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":55}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":4390,"byte_end":4396,"line_start":143,"line_end":143,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":59}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":4552,"byte_end":4558,"line_start":150,"line_end":150,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":4696,"byte_end":4702,"line_start":157,"line_end":157,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":4827,"byte_end":4833,"line_start":164,"line_end":164,"column_start":26,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":4846,"byte_end":4852,"line_start":166,"line_end":166,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":6319,"byte_end":6325,"line_start":229,"line_end":229,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":82},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":89},{"krate":0,"index":93},{"krate":0,"index":97},{"krate":0,"index":101},{"krate":0,"index":103},{"krate":0,"index":105},{"krate":0,"index":107},{"krate":0,"index":109},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":22402,"byte_end":22408,"line_start":795,"line_end":795,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":22564,"byte_end":22570,"line_start":801,"line_end":801,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":22819,"byte_end":22828,"line_start":816,"line_end":816,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":131}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":23730,"byte_end":23739,"line_start":843,"line_end":843,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":24756,"byte_end":24771,"line_start":875,"line_end":875,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":25492,"byte_end":25496,"line_start":901,"line_end":901,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":25719,"byte_end":25724,"line_start":908,"line_end":908,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":25947,"byte_end":25959,"line_start":915,"line_end":915,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":26182,"byte_end":26192,"line_start":922,"line_end":922,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":26415,"byte_end":26434,"line_start":929,"line_end":929,"column_start":36,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":3601,"byte_end":3607,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":39},"to":{"krate":1,"index":2185}},{"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":3853,"byte_end":3859,"line_start":121,"line_end":121,"column_start":31,"column_end":37},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":39},"to":{"krate":1,"index":2210}},{"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":3992,"byte_end":3998,"line_start":126,"line_end":126,"column_start":43,"column_end":49},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":39},"to":{"krate":1,"index":3896}},{"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":4193,"byte_end":4199,"line_start":134,"line_end":134,"column_start":37,"column_end":43},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":39},"to":{"krate":1,"index":3909}},{"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":4390,"byte_end":4396,"line_start":143,"line_end":143,"column_start":34,"column_end":40},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":39},"to":{"krate":1,"index":2082}},{"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":4552,"byte_end":4558,"line_start":150,"line_end":150,"column_start":27,"column_end":33},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":39},"to":{"krate":1,"index":2071}},{"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":4696,"byte_end":4702,"line_start":157,"line_end":157,"column_start":33,"column_end":39},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":39},"to":{"krate":1,"index":2045}},{"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":4827,"byte_end":4833,"line_start":164,"line_end":164,"column_start":26,"column_end":32},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":39},"to":{"krate":1,"index":2050}},{"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":4846,"byte_end":4852,"line_start":166,"line_end":166,"column_start":6,"column_end":12},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":39},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":6319,"byte_end":6325,"line_start":229,"line_end":229,"column_start":19,"column_end":25},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":39},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":22402,"byte_end":22408,"line_start":795,"line_end":795,"column_start":34,"column_end":40},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":39},"to":{"krate":1,"index":7573}},{"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":22564,"byte_end":22570,"line_start":801,"line_end":801,"column_start":34,"column_end":40},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":39},"to":{"krate":1,"index":7215}},{"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":22819,"byte_end":22828,"line_start":816,"line_end":816,"column_start":22,"column_end":31},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":181},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":23730,"byte_end":23739,"line_start":843,"line_end":843,"column_start":39,"column_end":48},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":181},"to":{"krate":1,"index":3602}},{"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":24756,"byte_end":24771,"line_start":875,"line_end":875,"column_start":36,"column_end":51},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":191},"to":{"krate":1,"index":3602}},{"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":25492,"byte_end":25496,"line_start":901,"line_end":901,"column_start":36,"column_end":40},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":201},"to":{"krate":1,"index":3602}},{"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":25719,"byte_end":25724,"line_start":908,"line_end":908,"column_start":36,"column_end":41},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":210},"to":{"krate":1,"index":3602}},{"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":25947,"byte_end":25959,"line_start":915,"line_end":915,"column_start":36,"column_end":48},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":219},"to":{"krate":1,"index":3602}},{"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":26182,"byte_end":26192,"line_start":922,"line_end":922,"column_start":36,"column_end":46},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":228},"to":{"krate":1,"index":3602}},{"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-set-0.5.1/src/lib.rs","byte_start":26415,"byte_end":26434,"line_start":929,"line_end":929,"column_start":36,"column_end":55},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":237},"to":{"krate":1,"index":3602}}]}
{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.5","program":"/home/austen/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","utf8","/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.5/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=72ef50fb1e353bd3","-C","extra-filename=-72ef50fb1e353bd3","--out-dir","/home/austen/Documents/school/research/scraper/target/rls/debug/deps","-L","dependency=/home/austen/Documents/school/research/scraper/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/austen/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/austen/Documents/school/research/scraper/target/rls/debug/deps/libutf8-72ef50fb1e353bd3.rmeta"},"prelude":{"crate_id":{"name":"utf8","disambiguator":[13673478401025742982,10301682284149252050]},"crate_root":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.5/src","external_crates":[{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.5/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[14029911340352309513,3694302842271320647]}},{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.5/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[5366521311420338507,5001693844293236078]}},{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.5/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[16078967021793905033,18044181950654841110]}},{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.5/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[3256375668792353550,7694578384779899277]}},{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.5/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[17967524032803306908,5163911630854790873]}},{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.5/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[7486411228932131176,10611882423765912104]}},{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.5/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[8951493940525711481,6598059053846807751]}},{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.5/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[6080538021290120973,12135415365643254465]}},{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.5/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[2404946192574906823,11198495443784404083]}},{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.5/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[8156052144428984436,15205012491124168822]}},{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.5/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[11527475684179663565,15577722846879460413]}},{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.5/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[4615572763888095747,7180296191060376175]}},{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.5/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[16051702409717455556,18428390842256153874]}},{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.5/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[14083788917415871355,15092499333930635081]}}],"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.5/src/lib.rs","byte_start":0,"byte_end":6425,"line_start":1,"line_end":186,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":14},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.5/src/lib.rs","byte_start":37,"byte_end":49,"line_start":4,"line_end":4,"column_start":16,"column_end":28},"alias_span":null,"name":"LossyDecoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":33},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.5/src/lib.rs","byte_start":66,"byte_end":80,"line_start":5,"line_end":5,"column_start":16,"column_end":30},"alias_span":null,"name":"BufReadDecoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":86},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.5/src/lib.rs","byte_start":82,"byte_end":101,"line_start":5,"line_end":5,"column_start":32,"column_end":51},"alias_span":null,"name":"BufReadDecoderError","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.5/src/lib.rs","byte_start":0,"byte_end":6425,"line_start":1,"line_end":186,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.5/src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":25},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":97},{"krate":0,"index":111},{"krate":0,"index":109},{"krate":0,"index":106},{"krate":0,"index":72},{"krate":0,"index":75},{"krate":0,"index":114},{"krate":0,"index":122},{"krate":0,"index":121},{"krate":0,"index":118},{"krate":0,"index":77},{"krate":0,"index":78}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.5/src/lossy.rs","byte_start":7258,"byte_end":7270,"line_start":23,"line_end":23,"column_start":12,"column_end":24},"name":"LossyDecoder","qualname":"::lossy::LossyDecoder","value":"LossyDecoder {  }","parent":null,"children":[{"krate":0,"index":16},{"krate":0,"index":17}],"decl_id":null,"docs":" A push-based, lossy decoder for UTF-8.\n Errors are replaced with the U+FFFD replacement character.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":20},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.5/src/lossy.rs","byte_start":7447,"byte_end":7450,"line_start":31,"line_end":31,"column_start":12,"column_end":15},"name":"new","qualname":"<LossyDecoder<F>>::new","value":"fn (push_str: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder from a callback.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.5/src/lossy.rs","byte_start":7426,"byte_end":7435,"line_start":30,"line_end":30,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.5/src/lossy.rs","byte_start":8017,"byte_end":8021,"line_start":48,"line_end":48,"column_start":12,"column_end":16},"name":"feed","qualname":"<LossyDecoder<F>>::feed","value":"fn (&mut self, mut input: &[u8]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Feed one chunk of input into the decoder.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":33},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.5/src/read.rs","byte_start":9628,"byte_end":9642,"line_start":8,"line_end":8,"column_start":12,"column_end":26},"name":"BufReadDecoder","qualname":"::read::BufReadDecoder","value":"BufReadDecoder {  }","parent":null,"children":[{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37}],"decl_id":null,"docs":" Wraps a `std::io::BufRead` buffered byte stream and decode it as UTF-8.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":88},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.5/src/read.rs","byte_start":10003,"byte_end":10022,"line_start":20,"line_end":20,"column_start":5,"column_end":24},"name":"InvalidByteSequence","qualname":"::read::BufReadDecoderError::InvalidByteSequence","value":"BufReadDecoderError::InvalidByteSequence(&'a [u8])","parent":{"krate":0,"index":86},"children":[],"decl_id":null,"docs":" Represents one UTF-8 error in the byte stream.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":91},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.5/src/read.rs","byte_start":10092,"byte_end":10094,"line_start":23,"line_end":23,"column_start":5,"column_end":7},"name":"Io","qualname":"::read::BufReadDecoderError::Io","value":"BufReadDecoderError::Io(io::Error)","parent":{"krate":0,"index":86},"children":[],"decl_id":null,"docs":" An I/O error from the underlying byte stream\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":86},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.5/src/read.rs","byte_start":9758,"byte_end":9777,"line_start":15,"line_end":15,"column_start":10,"column_end":29},"name":"BufReadDecoderError","qualname":"::read::BufReadDecoderError","value":"BufReadDecoderError::{InvalidByteSequence, Io}","parent":null,"children":[{"krate":0,"index":88},{"krate":0,"index":91}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.5/src/read.rs","byte_start":10197,"byte_end":10202,"line_start":28,"line_end":28,"column_start":12,"column_end":17},"name":"lossy","qualname":"<BufReadDecoderError>::lossy","value":"fn (self) -> Result<&'static str, io::Error>","parent":null,"children":[],"decl_id":null,"docs":" Replace UTF-8 errors with U+FFFD\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.5/src/read.rs","byte_start":11242,"byte_end":11262,"line_start":58,"line_end":58,"column_start":12,"column_end":32},"name":"read_to_string_lossy","qualname":"<BufReadDecoder<B>>::read_to_string_lossy","value":"fn (buf_read: B) -> io::Result<String>","parent":null,"children":[],"decl_id":null,"docs":" This is to `Read::read_to_string` what `String::from_utf8_lossy` is to `String::from_utf8`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.5/src/read.rs","byte_start":11527,"byte_end":11530,"line_start":67,"line_end":67,"column_start":12,"column_end":15},"name":"new","qualname":"<BufReadDecoder<B>>::new","value":"fn (buf_read: B) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.5/src/read.rs","byte_start":11780,"byte_end":11790,"line_start":76,"line_end":76,"column_start":12,"column_end":22},"name":"next_lossy","qualname":"<BufReadDecoder<B>>::next_lossy","value":"fn (&mut self) -> Option<io::Result<&str>>","parent":null,"children":[],"decl_id":null,"docs":" Same as `BufReadDecoder::next_strict`, but replace UTF-8 errors with U+FFFD.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.5/src/read.rs","byte_start":12328,"byte_end":12339,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"name":"next_strict","qualname":"<BufReadDecoder<B>>::next_strict","value":"fn (&mut self) -> Option<Result<&str, BufReadDecoderError>>","parent":null,"children":[],"decl_id":null,"docs":" Decode and consume the next chunk of UTF-8 input.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":71},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.5/src/lib.rs","byte_start":275,"byte_end":296,"line_start":13,"line_end":13,"column_start":11,"column_end":32},"name":"REPLACEMENT_CHARACTER","qualname":"::REPLACEMENT_CHARACTER","value":"&'static str","parent":null,"children":[],"decl_id":null,"docs":" The replacement character, U+FFFD. In lossy decoding, insert it for every decoding error.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":99},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.5/src/lib.rs","byte_start":514,"byte_end":521,"line_start":19,"line_end":19,"column_start":5,"column_end":12},"name":"Invalid","qualname":"::DecodeError::Invalid","value":"DecodeError::Invalid { valid_prefix, invalid_sequence, remaining_input }","parent":{"krate":0,"index":97},"children":[],"decl_id":null,"docs":" In lossy decoding insert `valid_prefix`, then `\"\\u{FFFD}\"`,\n then call `decode()` again with `remaining_input`.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":103},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.5/src/lib.rs","byte_start":800,"byte_end":810,"line_start":27,"line_end":27,"column_start":5,"column_end":15},"name":"Incomplete","qualname":"::DecodeError::Incomplete","value":"DecodeError::Incomplete { valid_prefix, incomplete_suffix }","parent":{"krate":0,"index":97},"children":[],"decl_id":null,"docs":" Call the `incomplete_suffix.try_complete` method with more input when available.\n If no more input is available, this is an invalid byte sequence.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":97},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.5/src/lib.rs","byte_start":365,"byte_end":376,"line_start":16,"line_end":16,"column_start":10,"column_end":21},"name":"DecodeError","qualname":"::DecodeError","value":"DecodeError::{Invalid, Incomplete}","parent":null,"children":[{"krate":0,"index":99},{"krate":0,"index":103}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":114},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.5/src/lib.rs","byte_start":2082,"byte_end":2092,"line_start":66,"line_end":66,"column_start":12,"column_end":22},"name":"Incomplete","qualname":"::Incomplete","value":"Incomplete { buffer, buffer_len }","parent":null,"children":[{"krate":0,"index":115},{"krate":0,"index":117}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":115},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.5/src/lib.rs","byte_start":2103,"byte_end":2109,"line_start":67,"line_end":67,"column_start":9,"column_end":15},"name":"buffer","qualname":"::Incomplete::buffer","value":"[u8; _]","parent":{"krate":0,"index":114},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":117},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.5/src/lib.rs","byte_start":2128,"byte_end":2138,"line_start":68,"line_end":68,"column_start":9,"column_end":19},"name":"buffer_len","qualname":"::Incomplete::buffer_len","value":"u8","parent":{"krate":0,"index":114},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":77},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.5/src/lib.rs","byte_start":2154,"byte_end":2160,"line_start":71,"line_end":71,"column_start":8,"column_end":14},"name":"decode","qualname":"::decode","value":"fn (input: &[u8]) -> Result<&str, DecodeError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.5/src/lib.rs","byte_start":3091,"byte_end":3096,"line_start":102,"line_end":102,"column_start":12,"column_end":17},"name":"empty","qualname":"<Incomplete>::empty","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.5/src/lib.rs","byte_start":3219,"byte_end":3227,"line_start":109,"line_end":109,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Incomplete>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.5/src/lib.rs","byte_start":3292,"byte_end":3295,"line_start":113,"line_end":113,"column_start":12,"column_end":15},"name":"new","qualname":"<Incomplete>::new","value":"fn (bytes: &[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.5/src/lib.rs","byte_start":3847,"byte_end":3859,"line_start":127,"line_end":127,"column_start":12,"column_end":24},"name":"try_complete","qualname":"<Incomplete>::try_complete","value":"fn <'input> (&mut self, input: &'input [u8]) -> Option<(Result<&str, &[u8]>, &'input [u8])>","parent":null,"children":[],"decl_id":null,"docs":" * `None`: still incomplete, call `try_complete` again with more input.\n   If no more input is available, this is invalid byte sequence.\n * `Some((result, remaining_input))`: We’re done with this `Incomplete`.\n   To keep decoding, pass `remaining_input` to `decode()`.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.5/src/lossy.rs","byte_start":7358,"byte_end":7370,"line_start":28,"line_end":28,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":20},{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.5/src/lossy.rs","byte_start":9274,"byte_end":9286,"line_start":85,"line_end":85,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":24}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.5/src/read.rs","byte_start":10119,"byte_end":10138,"line_start":26,"line_end":26,"column_start":10,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.5/src/read.rs","byte_start":10456,"byte_end":10475,"line_start":36,"line_end":36,"column_start":27,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":43}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.5/src/read.rs","byte_start":10846,"byte_end":10865,"line_start":47,"line_end":47,"column_start":20,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":46}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.5/src/read.rs","byte_start":11111,"byte_end":11125,"line_start":56,"line_end":56,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":54}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.5/src/lib.rs","byte_start":919,"byte_end":930,"line_start":33,"line_end":33,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.5/src/lib.rs","byte_start":2021,"byte_end":2032,"line_start":63,"line_end":63,"column_start":20,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.5/src/lib.rs","byte_start":3067,"byte_end":3077,"line_start":101,"line_end":101,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":84},{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.5/src/lossy.rs","byte_start":7358,"byte_end":7370,"line_start":28,"line_end":28,"column_start":22,"column_end":34},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":14},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.5/src/lossy.rs","byte_start":9274,"byte_end":9286,"line_start":85,"line_end":85,"column_start":31,"column_end":43},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":14},"to":{"krate":2,"index":1731}},{"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.5/src/read.rs","byte_start":10119,"byte_end":10138,"line_start":26,"line_end":26,"column_start":10,"column_end":29},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":86},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.5/src/read.rs","byte_start":10456,"byte_end":10475,"line_start":36,"line_end":36,"column_start":27,"column_end":46},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":86},"to":{"krate":2,"index":7578}},{"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.5/src/read.rs","byte_start":10846,"byte_end":10865,"line_start":47,"line_end":47,"column_start":20,"column_end":39},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":86},"to":{"krate":1,"index":1625}},{"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.5/src/read.rs","byte_start":11111,"byte_end":11125,"line_start":56,"line_end":56,"column_start":18,"column_end":32},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":33},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.5/src/lib.rs","byte_start":919,"byte_end":930,"line_start":33,"line_end":33,"column_start":27,"column_end":38},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":97},"to":{"krate":2,"index":7578}},{"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.5/src/lib.rs","byte_start":2021,"byte_end":2032,"line_start":63,"line_end":63,"column_start":20,"column_end":31},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":97},"to":{"krate":1,"index":1625}},{"span":{"file_name":"/home/austen/.cargo/registry/src/github.com-1ecc6299db9ec823/utf-8-0.7.5/src/lib.rs","byte_start":3067,"byte_end":3077,"line_start":101,"line_end":101,"column_start":6,"column_end":16},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":114},"to":{"krate":4294967295,"index":4294967295}}]}